# vim: ft=dockerfile
FROM ubuntu:18.04 AS base

RUN apt-get -qq update && \
    apt-get -qq install -y --no-install-recommends \
        build-essential \
        python3 \
        python3-pip \
        python3-dev \
        python3-setuptools \
        sudo \
        libjpeg-dev

# libgtk-3-dev is only required for gui, but we install it
# nonetheless to avoid working with python subpackages and still
# be able to use pip install -e .
#
# gstreamer is only required for gst-bridge but we install it
# nonetheless to use a single docker image for everything
RUN apt-get -qq install -y --no-install-recommends \
    gstreamer1.0-doc \
    gstreamer1.0-libav \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-tools \
    libgstreamer1.0-0 \
    libgtk-3-dev \
    python3-gst-1.0 \
    wmctrl

# a bunch of dev. tools
RUN apt-get -qq install -y --no-install-recommends \
    gawk \
    less \
    vim \
    ranger \
    strace \
    sudo \
    unzip \
    wget 

RUN echo "export PS1=\\\\\\\\w\\$" >> /etc/bash.bashrc

RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.2/protoc-3.11.2-linux-x86_64.zip -O protoc.zip && \
    unzip protoc.zip -d protoc && \
    mv protoc/bin/* /usr/local/bin && \
    mv protoc/include/* /usr/local/include

RUN pip3 install protobuf==3.6.0
RUN pip3 install pymap3d

# user setings
ARG UID=1000
ARG GID=1000
RUN echo uid=$UID,gid=$GID
ENV HOME=/home/docker
ENV MIB_DIR=$HOME/mib
RUN groupadd -g $GID docker && useradd -u $UID -g $GID docker
RUN echo "docker:docker" | chpasswd
RUN echo "docker ALL=(ALL:ALL) NOPASSWD:ALL" >> /etc/sudoers
#RUN mkdir -p $MIB_DIR && chown -R docker:docker $HOME
RUN echo "export PS1=\\\\\\\\w\\$" >> /etc/bash.bashrc

RUN apt-get install -y libxml2-dev libxslt-dev
USER docker

WORKDIR $MIB_DIR

# we first copy requirements.txt and install all the python packages required
# this is a separate step before copying all of the code so that
# the cache is not invalidated because every single change in the repository
# COPY --chown=docker:docker requirements.txt .
RUN pip3 --timeout=1000 install torch==1.10.2
RUN pip3 install scikit-build
RUN pip3 install cmake==3.12
RUN sudo apt install -y libgirepository1.0-dev
RUN sudo apt-get install -y freeglut3-dev libgstreamer-plugins-base1.0-dev libwxgtk3.0-gtk3-dev
COPY --chown=docker:docker requirements.txt .

# USER root
RUN sudo apt-get install -y dpkg-dev build-essential python3-dev freeglut3-dev libgl1-mesa-dev libglu1-mesa-dev libgstreamer-plugins-base1.0-dev libgtk-3-dev libjpeg-dev libnotify-dev libpng-dev libsdl2-dev libsm-dev libtiff-dev libwebkit2gtk-4.0-dev libxtst-dev python-cairo

RUN pip3 install -r requirements.txt
USER root

#RUN apt-get install -y python-wxgtk3.0-dev
RUN apt-get install -y python3-wxgtk4.0
RUN pip3 install scipy geolib

RUN apt-get install -y build-essential cmake git pkg-config libgtk-3-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
    gfortran openexr libatlas-base-dev python3-dev python3-numpy \
    libtbb2 libtbb-dev libdc1394-22-dev

RUN git config --global core.compression 0
#RUN mkdir /opencv_build && cd /opencv_build && \
#git clone -b 4.4.0 https://github.com/opencv/opencv.git && \
#git clone -b 4.4.0 https://github.com/opencv/opencv_contrib.git

#RUN cd /opencv_build/openv && addd

#RUN cd /opencv_build/opencv && mkdir build && cd build && \
#    cmake -D CMAKE_BUILD_TYPE=RELEASE \


#    -D CMAKE_INSTALL_PREFIX=/usr/local \
#    -D INSTALL_C_EXAMPLES=ON \
#    -D INSTALL_PYTHON_EXAMPLES=ON \
#    -D OPENCV_GENERATE_PKGCONFIG=ON \
#    -D OPENCV_EXTRA_MODULES_PATH=/opencv_build/opencv_contrib/modules \
#    -D BUILD_EXAMPLES=ON ..

#RUN cd /opencv_build/opencv/build && make -j8
#RUN cd /opencv_build/opencv/build && make install
RUN pip3 install opencv-python==4.7.0.72
RUN pip3 install dataclasses
RUN pip3 install pycryptodome
RUN pip3 install cython
RUN pip3 install empy==3.3.2
RUN apt-get install -y  python-pip
RUN pip3 install mavproxy
RUN ln -s /home/docker/.local/bin/mavproxy.py /bin/mavproxy.py

RUN sudo mv /usr/bin/python /usr/bin/python_old
RUN sudo ln -s /usr/bin/python3 /usr/bin/python
#RUN chmod 700 /tmp

USER docker
# now copy all of the code inside
# initially, it was followed by pip install -e .
# but we don't do that anymore to preserve docker cached layers
#COPY --chown=docker:docker . .

CMD /bin/bash

# this addition is only for gui
# mkdir tilecache is required for volume permissions to work
FROM base AS gui2
RUN mkdir /home/docker/.tilecache
RUN sudo mkdir -p /media/nvme/infra
RUN sudo apt-get install -y openscenegraph libboost-dev libboost-all-dev

#COPY --chown=docker:docker ipdl-5.0.1.dev92+g8755651-cp36-cp36m-linux_x86_64.whl .
#RUN pip3 install ipdl-5.0.1.dev92+g8755651-cp36-cp36m-linux_x86_64.whl
#run rm ipdl-5.0.1.dev92+g8755651-cp36-cp36m-linux_x86_64.whl

ENV LD_LIBRARY_PATH=/home/docker/mib/mib/offboard/servers/localimagemapper/so

WORKDIR $MIB_DIR/mib/gui2
CMD python3 main_gui.py

